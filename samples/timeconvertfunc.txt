#include<string.h>
#include <stdio.h>
#include<time.h>


 

void time_convert(char* message,int *unix1,int *unix2)
{
struct tm t;
time_t t_of_day;

int hr,mint,secnd,yr,mnth,dy;


char str[100];
strcpy(str,message);
   const char s[] = "<;>";
   const char ti[]=":";
   char *token;
   char *t1;
   char *t2;
   char*oper;
   int flag=0;
   
   
   
   /* get the first token */
   token = strtok(str, s);
   t1=token;
   printf( "Output1= %s\n", t1 );
    token = strtok(NULL, s);
      t2=token;
   printf( "Output2= %s\n", t2 );
   while(flag<2)
   {
       
      if(flag==0)
   {
       oper=t1;
   }
   if(flag==1)
   {
       oper=t2;
   }
   
       token=strtok(oper,":");
       hr=atoi(token);
       
       token=strtok(NULL,":");
       mint=atoi(token);
       
       token=strtok(NULL,":");
       secnd=atoi(token);
       token=strtok(NULL,":");
       yr=atoi(token);
      token=strtok(NULL,":");
       mnth=atoi(token);
       token=strtok(NULL,":");
       dy=atoi(token);
       
       
     
        printf("year = %d\n",yr);
       
       
       t.tm_year = yr-1900;  // Year - 1900
    t.tm_mon = mnth-1;           // Month, where 0 = jan
    t.tm_mday =dy;          // Day of the month
    t.tm_hour =hr;
    t.tm_min =mint;
    t.tm_sec =secnd;
    t.tm_isdst = -1;        // Is DST on? 1 = yes, 0 = no, -1 = unknown
    t_of_day = mktime(&t);

 

    
      if(flag==0)
   {
       *unix1=(long)t_of_day;
       printf("seconds since the Epoch 1: %ld\n",*unix1);
   }
   if(flag==1)
   {
       *unix2=(long)t_of_day;
       printf("seconds since the Epoch 2: %ld\n",*unix2);
   }
   
   
   flag++;

 

   }
   
   
}
int main()
{
    int t1,t2;
    
     time_convert("16:22:24:2020:02:22<;>12:56:33:2019:09:31",&t1,&t2);
   
     printf("\ntime t1=%d",t1);
      printf("\ntime t2=%d",t2);
     
}